{
	"name": "Hmstest",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "hmstest",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "35b83dbe-c7ff-49c1-a82f-b58acc4be2ee"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/fe5aef09-bf0f-4faf-9c28-311200cf35cd/resourceGroups/Synapse-WS-L400/providers/Microsoft.Synapse/workspaces/imrehmstest/bigDataPools/hmstest",
				"name": "hmstest",
				"type": "Spark",
				"endpoint": "https://imrehmstest.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/hmstest",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%%configure -f\r\n",
					"{\r\n",
					"    \"conf\":{\r\n",
					"        \"spark.sql.hive.metastore.version\":\"3.1\",\r\n",
					"        \"spark.hadoop.hive.synapse.externalmetastore.linkedservice.name\":\"HMS_test\",\r\n",
					"        \"spark.sql.hive.metastore.jars\":\"/opt/hive-metastore/lib-3.1/*:/usr/hdp/current/hadoop-client/lib/*\",\r\n",
					"        \"spark.hadoop.metastore.authorization.storage.checks\": \"true\",\r\n",
					"        \"spark.hadoop.hive.metastore.authorization.storage.checks\": \"true\",\r\n",
					"        \"spark.sql.hive.metastore.authorization.storage.checks\": \"true\",\r\n",
					"        \"spark.hadoop.hive.metastore.pre.event.listeners\" : \"org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener\",\r\n",
					"        \"spark.hadoop.metastore.pre.event.listeners\" : \"org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener\",\r\n",
					"        \"spark.sql.hive.metastore.pre.event.listeners\" : \"org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener\",\r\n",
					"        \"spark.hadoop.hive.security.metastore.authorization.manager\" : \"org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider\",\r\n",
					"        \"spark.hadoop.security.metastore.authorization.manager\" : \"org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider\",\r\n",
					"        \"spark.sql.hive.security.metastore.authorization.manager\" : \"org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider\"\r\n",
					"    }\r\n",
					"}\r\n",
					""
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%configure -f\r\n",
					"{\r\n",
					"    \"conf\":{\r\n",
					"        \"spark.sql.hive.metastore.version\":\"3.1\",\r\n",
					"        \"spark.hadoop.hive.synapse.externalmetastore.linkedservice.name\":\"HMS_test\",\r\n",
					"        \"spark.sql.hive.metastore.jars\":\"/opt/hive-metastore/lib-3.1/*:/usr/hdp/current/hadoop-client/lib/*\",\r\n",
					"    }\r\n",
					"}\r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(\"show databases\").show()"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE TABLE myexternalparquettable2 (id int, name string, birthdate date) \r\n",
					"    USING Parquet\r\n",
					"--    LOCATION \"abfss://asadatalakeimre.dfs.core.windows.net/imrehdihive40/myparquettable\"\r\n",
					"    LOCATION \"abfss://tempdata@asadatalakeimre.dfs.core.windows.net/synapse/workspaces/asaworkspaceimre/warehouse/mytestdb.db/myparquettable\""
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE TABLE myexternalparquettable3 (id int, name string, birthdate date) \r\n",
					"    USING Parquet\r\n",
					"--    LOCATION \"abfss://asadatalakeimre.dfs.core.windows.net/imrehdihive40/myparquettable\"\r\n",
					"    LOCATION \"abfss://tempdata@asadatalakeimre.dfs.core.windows.net/synapse/workspaces/asaworkspaceimre/warehouse/mytestdb.db/myparquettable\""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"spark_context=spark.sparkContext.getConf()\r\n",
					"print(spark_context.toDebugString())"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import HiveContext;\r\n",
					"\r\n",
					"\r\n",
					"spark_context=spark.conf.getAll();\r\n",
					"print(spark_context.toDebugString());"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE EXTERNAL TABLE myexternalparquettable5 (id int, name string, birthdate date) \r\n",
					"    USING Parquet\r\n",
					"--    LOCATION \"abfss://asadatalakeimre.dfs.core.windows.net/imrehdihive40/myparquettable\"\r\n",
					"    LOCATION \"abfss://wwi-02@asadatalakeimre.dfs.core.windows.net/mytestdb.db/myparquettable5\""
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE EXTERNAL TABLE myexternalparquettable6 (id int, name string, birthdate date) \r\n",
					"    USING Parquet\r\n",
					"--    LOCATION \"abfss://asadatalakeimre.dfs.core.windows.net/imrehdihive40/myparquettable\"\r\n",
					"    LOCATION \"abfss://wwi-02@asadatalakeimre.dfs.core.windows.net/mytestdb.db/myparquettable6\""
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE DEFAULT;\r\n",
					"SHOW TABLES;"
				],
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- Create external table as MSI imrehmstest\r\n",
					"CREATE EXTERNAL TABLE myparquettable9 (id int, name string, birthdate date) \r\n",
					"--    USING Parquet\r\n",
					"--    LOCATION \"abfss://asadatalakeimre.dfs.core.windows.net/imrehdihive40/myparquettable\"\r\n",
					"    LOCATION \"abfss://wwi-02@asadatalakeimre.dfs.core.windows.net/mytestdb.db/myparquettable9\"\r\n",
					""
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql \r\n",
					"\r\n",
					"\r\n",
					"DROP table myparquettable9;"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT * FROM mytestdb.myparquettable;"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"DROP TABLE mytestdb.myparquettable;"
				],
				"execution_count": 8
			}
		]
	}
}